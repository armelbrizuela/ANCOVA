---
title: "Práctica de ANCOVA"
editor: visual
editor_options: 
  chunk_output_type: inline
---

Estos paquetes deben estar instalados:

```{r}
#| eval: false
install.packages("hypr")
install.packages("dplyr")
install.packages("broom")
install.packages("haven")
install.packages("forcats")
install.packages("interactions")
```

Active los siguientes paquetes.

```{r, warning = FALSE, message = FALSE}

library(hypr)
library(dplyr)
library(broom)
library(haven)
library(forcats)
library(interactions)
```

Lea el archivo **MBPM_Data_RCT.sav** con `read_sav()` y elimine las etiquetas del SPSS con `zap_labels()`.

```{r}

mindfulnes <- read_sav("MBPM_Data_RCT.sav") |>
  zap_labels()
```

Seleccione las columnas `LIglobalpre`, `Education`, `Group` y `LIglobalpost` y las guarda en un objeto llamado `mindfulnes`.

```{r}

mindfulnes <- mindfulnes |>
  select(LIglobalpost, Group, LIglobalpre, Education)
```

Con `summarise()` y `n()` muestre cuántas personas fueron asignadas a cada grupo (`Group`).

```{r}

mindfulnes |>
  summarise(.by = Group, n = n())
```

Con `summarise()` y `n()` muestre cuántas personas pertencen a cada nivel educativo (`Education`).

```{r}

mindfulnes |>
  summarise(.by = Education, n = n())
```

Convierta en variables tipo `character` las columnas `Group` y `Education`.

```{r}

mindfulnes <- mindfulnes |>
  mutate(
    Group = as.character(Group),
    Education = as.character(Education))
```

Convierta en variables tipo `factor` las columnas `Group` y `Education`.

```{r}

mindfulnes <- mindfulnes |>
  mutate(
    Group = fct(Group, levels = c("1", "2")),
    Education = fct(Education, levels = c("1", "2", "3", "4")))
```

Recodifique los factores `Group` y `Education` para que sus niveles sean `"Exp" = "1", "Ctr" = "2"` en el caso de `Group` y `"prim" = "1", "sec" = "2", "prof" = "3", "uni" = "4"` en el caso de `Education`.

```{r}

mindfulnes <- mindfulnes |>
  mutate(
    Group = fct_recode(Group, "Exp" = "1", "Ctr" = "2"),
    Education = fct_recode(Education, "prim" = "1", "sec" = "2", "prof" = "3", "uni" = "4"))
```

Con `summarise()` y `mean()` muestre las medias en el pretest y en el postest para los 8 grupos creados a partir de los factores.

```{r}

medias <- mindfulnes |>
  summarise(
    .by = c(Group, Education),
    n = n(),
    meanLIglobalpre = mean(LIglobalpre),
    meanLIglobalpost = mean(LIglobalpost, na.rm = T))

medias
```

Verifique si la covariable está asociada a los factores.

```{r}

lm(LIglobalpre ~ Group*Education, data = mindfulnes) |>
  cat_plot(pred = "Education", modx = "Group")
  
```

Verifique si la covariable está asociada a la variable de respuesta.

```{r}

with(mindfulnes, plot(LIglobalpre, LIglobalpost))
abline(lm(LIglobalpost ~ LIglobalpre, data = mindfulnes))
```

Genere contrastes de medias para `Group` y para `Education`.

```{r}

contrasts(mindfulnes$Group) <- contr.hypothesis(
  
  CvsE = Exp ~ Ctr,
  
  levels = c("Exp", "Ctr"))


contrasts(mindfulnes$Education) <- contr.hypothesis(
  
  primVSsec = prim ~ sec,
  profVSuni = prof ~ uni,
  
  levels = c("prim", "sec", "prof", "uni"))
```

Estime un modelo C y un modelo A1. El modelo A1 incluye los mismos predictores que el modelo C, pero agrega una interacción.

```{r}

modeloC <- lm(
  LIglobalpost ~ 1 + LIglobalpre + Group + Education, data = mindfulnes)

modeloA1 <- lm(
  LIglobalpost ~ 1 + LIglobalpre + Group + Education + Group*Education, data = mindfulnes)
```

Compare los modelos C y A1. Verifique si el modelo A1 reduce significativamente el error.

```{r}

anova(modeloC, modeloA1)
```

Muestre las diferencias de medias (coeficientes estimados) del modelo C.

```{r}

tidy(modeloC, conf.int = T) |>
  select(term, estimate, conf.low, conf.high, p.value) |>
  mutate(across(where(is.numeric), \(x) round(x, 2)))
```

Verifique si se cumple el supuesto de homogeneidad de las pendientes. Para ello, debe estimar un modelo A2 y luego compararlo con el modelo C.

```{r}

modeloA2 <- lm(
  LIglobalpost ~ 1 + LIglobalpre + Group + Education +
    LIglobalpre*Group + LIglobalpre*Education + LIglobalpre*Group*Education, data = mindfulnes)

anova(modeloC, modeloA2)
```

Muestre un gráfico de interacción del modelo A2 con la función `interact_plot()`.

```{r}

interact_plot(
  modeloA2, 
  pred = "LIglobalpre",
  modx = "Education",
  mod2 = "Group",
  interval = T)
```
